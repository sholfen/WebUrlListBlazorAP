@page "/Insert"
<h3>InserUrlData</h3>

@using WebUrlListBlazorAP.Data
@using Blazored.LocalStorage
@inject WebUrlDataService service
@inject ILocalStorageService localstorage

<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="1000" Placement="ToastsPlacement.TopCenter" />

<EditForm Model="@urlModel" OnSubmit="@Insert">
    <span>名稱</span><InputText @bind-Value="urlModel.Name" /> <br />
    <span>網址</span><InputText @bind-Value="urlModel.Url"></InputText> <br />
    <button type="submit">新增</button>
</EditForm>
<span>@message</span>

@code {
    //https://www.c-sharpcorner.com/article/using-localstorage-to-cache-data-in-blazor-applications/

    private WebUrlData urlModel = new();
    private string message = string.Empty;
    List<ToastMessage> messages = new List<ToastMessage>();

    private async Task Insert()
    {
        List<WebUrlData> list = await localstorage.GetItemAsync<List<WebUrlData>>(nameof(WebUrlData));
        if (list == null)
        {
            list = new List<WebUrlData>();
        }
        list.Add(new WebUrlData { Name = urlModel.Name, Url = urlModel.Url });

        foreach (var item in list)
        {
            service.Insert(item.Name, item.Url);
        }
        
        urlModel.Name = string.Empty;
        urlModel.Url = string.Empty; 
        await localstorage.SetItemAsync<List<WebUrlData>>(nameof(WebUrlData), list);

        ToastMessage message = new ToastMessage
        {
            Type = ToastType.Info,
            Message = $"已新增",
        };
        messages.Add(message);
    }
}
